Documentation for API REST endpoints:

Base path: localhost:8080/api


1) GET /trips - return JSON array of all trips where:
             ?minPrice=N ... price is >= N
             &maxPrice=M ... price is <= M
             &minLength=N ... length is >= N
             &maxLength=M ... length is <= M
             &startAfter=DATE ... startDate is >= DATE
             &startBefore=DATE ... startDate is <= DATE
             &endAfter=DATE ... endDate is >= DATE
             &endBefore=DATE ... endDate id <= DATE
                                 DATE is YYYY-MM-DD, assumed with 00:00:00.000 time
             &inName=SUBSTR ... name contains SUBSTR
             &country=COUNTRY ... countries contain COUNTRY
             &sortBy=ATTR ... sort returned array by attribute ATTR:
                              id, name, start, length, price (default: id)
             &order=DIRECTION ... sort in direction:
                                  ascending, descending (default: ascending)
       (all parameters are optional and applied in conjunction)

2) GET /trips/sort/ - OBSOLETE, please use just /trips?sortBy=ATTR&order=DIRECTION

3) GET /trips/{id} - return Trip with trip.getId() = {id}

4) GET /trips/name/{name} - return Trip with trip.getName() = {name}

5) GET /trips/users/{id} - return all users of Trip where trip.getId() = {id}

6) POST /trips - request body must be JSON entity Trip without ID attribute.
       If there is no Trip with the same NAME in DB, store Trip into DB
	       and return 201 CREATED with JSON entity Trip including assigned ID,
       otherwise,
	       return 409 CONFLICT with JSON entity Trip with conflicting NAME.

7) DELETE /trips/{id} - delete Trip where trip.getId = {id}, return 204 NO_CONTENT


Bulk operations (mostly for debugging):

8) GET /trips/bulk - return JSON array of all Trips, unsorted

9) POST /trips/bulk - add all Trips from JSON array as with POST /trips

10) PUT /trips/bulk - replace all Trips in DB with Trips from JSON array
       like DELETE /trips/bulk and POST /trips/bulk

11) PATCH /trips/bulk - add or replace all Trips from JSON array,
       Trips with same NAME are replaced, new NAMEs are added.

12) DELETE /trips/bulk - delete all Trips from DB

13) POST /tags/{tripid} - add one tag for trip where tripId = trip.getId, if tag exists then existTag add to trip, else created new tag and add to trip

14) DELETE /tags/{tripId}/{tagId} - delete one tag from trip where tripId = trip.getId and tagId = tag.getId, Tag is NOT DELETED from DB!

15) POST /country/{tripid} - add one country for trip where tripId = trip.getId, if country exists then existCountry add to trip, else created new Country and add to trip

16) DELETE /country/{tripId}/{countryId} - delete one country from trip where tripId = trip.getId and countryId = country.getId, Country is NOT DELETED from DB!

ENTITA TAG

1) GET /tags - retrurn all tags

2) POST /tags - add one Tag to db

3) DELETE /tags/{tagId} - delete one tag where tagId = tag.getId

4) GET /tags/{name} - return one Tag where name = tag.name

5) POST /tags/addAll - add all Tags from JSON array

ENTITA COUNTRY

1) GET /countries - get all countries

2) GET /countries/{name} - return Country where name = country.getName

3) POST /countries/addAll - add all Countries from JSON array

4) POST /countries - add one Country to db

5) DELETE /countries/{id} - delete country where id = country.getId

6) GET /countries/tripGet/{countryId} - retun all Trips from country where countryId = country.getId

7) POST /countries/trip/{countryId} - add trip to country where countryId = country.getId

8) DELETE /countries/trip/{countryId}/{tripId} - delete trip from country where countryId = country.getId and tripId = trip.getId Trip is NOT DELETED from DB!
